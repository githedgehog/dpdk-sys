#!/usr/bin/env bash

set -euxo pipefail

declare -rx NIXPKGS_BRANCH="nixpkgs-unstable"

declare project_dir
project_dir="$(readlink -e "$(dirname "$(readlink -e "${BASH_SOURCE[0]}/..")")")"
declare -r project_dir

declare -a cleanup_actions=()

_cleanup() {
  declare action
  for action in "${cleanup_actions[@]}"; do
    ${action}
  done
}
trap _cleanup EXIT

declare nixpkgs_repo
nixpkgs_repo="$(mktemp --directory --suffix=.nixpkgs)"
declare -r nixpkgs_repo

git clone \
  --filter=blob:none \
  --no-checkout \
  --single-branch \
  --depth=1 \
  --branch="${NIXPKGS_BRANCH}" \
  "https://github.com/NixOS/nixpkgs" \
  "${nixpkgs_repo}"
cleanup_actions+=("rm -rf ${nixpkgs_repo}")
pushd "${nixpkgs_repo}"

declare NIXPKGS_COMMIT
NIXPKGS_COMMIT="$(git rev-parse HEAD)"
declare -rx NIXPKGS_COMMIT

declare NIXPKGS_COMMIT_DATE
NIXPKGS_COMMIT_DATE="$(date --date="$(git log --pretty=format:%ci -n1)" --utc --iso-8601=seconds)"
declare -rx NIXPKGS_COMMIT_DATE

declare NIXPKGS_SOURCE_URL
NIXPKGS_SOURCE_URL="https://github.com/NixOS/nixpkgs/archive/${NIXPKGS_COMMIT}.tar.gz"
declare -rx NIXPKGS_SOURCE_URL

declare -rx NIXPKGS_NIX_HASH_TYPE=sha256
declare NIXPKGS_NIX_HASH
NIXPKGS_NIX_HASH="$(
  nix-prefetch-url \
    --name "${NIXPKGS_BRANCH}" \
    --type "${NIXPKGS_NIX_HASH_TYPE}" \
    "${NIXPKGS_SOURCE_URL}"
)"
declare -rx NIXPKGS_NIX_HASH

declare NIXPKGS_PATH
NIXPKGS_PATH="$(
  nix-prefetch-url \
    --print-path \
    --name "${NIXPKGS_BRANCH}" \
    --type "${NIXPKGS_NIX_HASH_TYPE}" \
    "${NIXPKGS_SOURCE_URL}" \
    "${NIXPKGS_NIX_HASH}" | tail -n 1
)"
declare -rx NIXPKGS_PATH

hash_file() {
  declare -r algo="$1"
  declare -r file="$2"
  openssl dgst "-${algo}" < "${file}" | cut -d' ' -f2
}

declare NIXPKGS_TAR_SHA256
declare NIXPKGS_TAR_SHA384
declare NIXPKGS_TAR_SHA512
declare NIXPKGS_TAR_SHA3_256
declare NIXPKGS_TAR_SHA3_384
declare NIXPKGS_TAR_SHA3_512
declare NIXPKGS_TAR_B2B512
declare NIXPKGS_TAR_B2S512

declare -r nixpkgs_tar_file="${NIXPKGS_PATH}"

NIXPKGS_TAR_SHA256="$(hash_file sha256 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_SHA384="$(hash_file sha384 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_SHA512="$(hash_file sha512 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_SHA3_256="$(hash_file sha3-256 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_SHA3_384="$(hash_file sha3-384 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_SHA3_512="$(hash_file sha3-512 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_B2B512="$(hash_file blake2b512 "${nixpkgs_tar_file}")"
NIXPKGS_TAR_B2S512="$(hash_file blake2s256 "${nixpkgs_tar_file}")"

declare -rx NIXPKGS_TAR_SHA256
declare -rx NIXPKGS_TAR_SHA384
declare -rx NIXPKGS_TAR_SHA512
declare -rx NIXPKGS_TAR_SHA3_256
declare -rx NIXPKGS_TAR_SHA3_384
declare -rx NIXPKGS_TAR_SHA3_512
declare -rx NIXPKGS_TAR_B2B512
declare -rx NIXPKGS_TAR_B2S512

pushd "${project_dir}"

# We pick the nightly from 36 hours ago because tonight's nightly might not be available yet :)
declare RUST_NIGHTLY_PIN
RUST_NIGHTLY_PIN="nightly-$(date --utc --iso-8601 --date="@$(( $(date --utc '+%s') - 36 * 60 * 60))")"
declare -rx RUST_NIGHTLY_PIN

rustup update
rustup toolchain install "stable"
rustup toolchain install "${RUST_NIGHTLY_PIN}"
rustup update

declare RUST_STABLE_PIN_LLVM RUST_NIGHTLY_PIN_LLVM
RUST_STABLE_PIN="$(rustc "+stable" -vV | grep 'release:' | awk '{print $NF}')"
RUST_STABLE_PIN_LLVM="$(rustc "+stable" -vV | grep 'LLVM version:' | awk '{print $NF}' | sed 's/\([0-9]\+\)\.[0-9]\+\.[0-9]\+/\1/')"
RUST_NIGHTLY_PIN_LLVM="$(rustc "+$RUST_NIGHTLY_PIN" -vV | grep 'LLVM version:' | awk '{print $NF}' | sed 's/\([0-9]\+\)\.[0-9]\+\.[0-9]\+/\1/')"
declare -rx RUST_STABLE_PIN
declare -rx RUST_STABLE_PIN_LLVM
declare -rx RUST_NIGHTLY_PIN_LLVM

declare -rx WARNING="WARNING: This file is generated by the update-version-pinning.sh script. Do not edit it manually."
envsubst < "./builds.template.yml" > "./builds.yml"
envsubst < "${project_dir}/nix/versions.nix.template" > "${project_dir}/nix/versions.nix"
