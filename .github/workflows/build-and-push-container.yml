name: Build
on: [ push, pull_request ]

jobs:
  build-matrix:
    name: generate build matrix
    runs-on:
      - lab
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Setup jq
        # TODO: find a better way to get jq
        uses: vegardit/gha-setup-jq@v1
      - run: cargo install whyq
      - id: matrix
        run: echo "matrix=$(yq -c '.matrix' builds.yml)" | tee -a "${GITHUB_OUTPUT}"
  build-on-lab:
    name: build-containers
    needs: build-matrix
    runs-on:
      - lab
    timeout-minutes: 300
    strategy:
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: install nix
        uses: cachix/install-nix-action@v30
      - name: confirm sources
        run: ./scripts/confirm-sources.sh
      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install just
        uses: extractions/setup-just@v2
        with:
          just-version: ${{ matrix.just }}
      - name: setup nix cache
        id: nix-package-cache
        uses: actions/cache@v4
        with:
          path: /nix
          key: /nixpkgs/${{ matrix.nixpkgs }}/rust/${{ matrix.toolchain.key }}/${{matrix.toolchain.rust.version}}
      - name: build
        run: just --yes debug=true max_nix_builds=1 rust=${{matrix.toolchain.key}} build
      - name: push
        run: just --yes debug=true max_nix_builds=1 rust=${{matrix.toolchain.key}} push
      - name: garbage collect
        run: just --yes debug=true max_nix_builds=1 rust=${{matrix.toolchain.key}} nix-garbage-collector
