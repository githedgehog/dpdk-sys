Index: buildlib/rdma_functions.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildlib/rdma_functions.cmake b/buildlib/rdma_functions.cmake
--- a/buildlib/rdma_functions.cmake	(revision Staged)
+++ b/buildlib/rdma_functions.cmake	(date 1737253908588)
@@ -286,7 +286,7 @@
     OUTPUT ${OUTPUTS}
     COMMAND "${PYTHON_EXECUTABLE}" "${PROJECT_SOURCE_DIR}/buildlib/sanitize_static_lib.py"
              --version ${PACKAGE_VERSION}
-             --ar "${CMAKE_AR}" --nm "${CMAKE_NM}" --objcopy "${CMAKE_OBJCOPY}" ${ARGS}
+             --ar "${CMAKE_AR}" --nm "${CMAKE_NM}" ${ARGS}
     DEPENDS ${DEPENDS} "${PROJECT_SOURCE_DIR}/buildlib/sanitize_static_lib.py"
     COMMENT "Building distributable static libraries"
     VERBATIM)
@@ -298,7 +298,6 @@
   set(PC_LIB_NAME "${PC_LIB_NAME}")
   set(PC_LIB_PRIVATE "${PC_LIB_PRIVATE}")
   set(PC_REQUIRES_PRIVATE "${PC_REQUIRES_PRIVATE}")
-  get_target_property(PC_VERSION ${PC_LIB_NAME} VERSION)

   # With IN_PLACE=1 the install step is not run, so generate the file in the build dir
   if (IN_PLACE)
Index: buildlib/sanitize_static_lib.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildlib/sanitize_static_lib.py b/buildlib/sanitize_static_lib.py
--- a/buildlib/sanitize_static_lib.py	(revision Staged)
+++ b/buildlib/sanitize_static_lib.py	(date 1737245679721)
@@ -170,8 +170,7 @@
         """Invoke objcopy on all the objects to rename their symbols"""
         for I in self.objects:
             subprocess.check_call([
-                args.objcopy,
-                "--redefine-syms=%s" % (rename_fn),
+                "cp",
                 os.path.join(self.objdir, I),
                 os.path.join(self.final_objdir, I)
             ])
@@ -234,8 +233,6 @@
     "--version", action="store", help="Package version number", required=True)
 parser.add_argument("--ar", action="store", help="ar tool", required=True)
 parser.add_argument("--nm", action="store", help="nm tool", required=True)
-parser.add_argument(
-    "--objcopy", action="store", help="objcopy tool", required=True)
 args = parser.parse_args()

 global_syms = set()
Index: libibverbs/examples/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libibverbs/examples/CMakeLists.txt b/libibverbs/examples/CMakeLists.txt
--- a/libibverbs/examples/CMakeLists.txt	(revision Staged)
+++ b/libibverbs/examples/CMakeLists.txt	(date 1737245168972)
@@ -1,28 +1,0 @@
-# Shared example files
-add_library(ibverbs_tools STATIC
-  pingpong.c
-  )
-
-rdma_executable(ibv_asyncwatch asyncwatch.c)
-target_link_libraries(ibv_asyncwatch LINK_PRIVATE ibverbs)
-
-rdma_executable(ibv_devices device_list.c)
-target_link_libraries(ibv_devices LINK_PRIVATE ibverbs)
-
-rdma_executable(ibv_devinfo devinfo.c)
-target_link_libraries(ibv_devinfo LINK_PRIVATE ibverbs)
-
-rdma_executable(ibv_rc_pingpong rc_pingpong.c)
-target_link_libraries(ibv_rc_pingpong LINK_PRIVATE ibverbs ibverbs_tools)
-
-rdma_executable(ibv_srq_pingpong srq_pingpong.c)
-target_link_libraries(ibv_srq_pingpong LINK_PRIVATE ibverbs ibverbs_tools)
-
-rdma_executable(ibv_uc_pingpong uc_pingpong.c)
-target_link_libraries(ibv_uc_pingpong LINK_PRIVATE ibverbs ibverbs_tools)
-
-rdma_executable(ibv_ud_pingpong ud_pingpong.c)
-target_link_libraries(ibv_ud_pingpong LINK_PRIVATE ibverbs ibverbs_tools)
-
-rdma_executable(ibv_xsrq_pingpong xsrq_pingpong.c)
-target_link_libraries(ibv_xsrq_pingpong LINK_PRIVATE ibverbs ibverbs_tools)
Index: libibverbs/libibverbs.map.in
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libibverbs/libibverbs.map.in b/libibverbs/libibverbs.map.in
--- a/libibverbs/libibverbs.map.in	(revision Staged)
+++ b/libibverbs/libibverbs.map.in	(date 1737244067482)
@@ -93,7 +93,6 @@
 		ibv_query_srq;
 		ibv_rate_to_mbps;
 		ibv_reg_mr;
-		ibv_register_driver;
 		ibv_rereg_mr;
 		ibv_resize_cq;
 		ibv_resolve_eth_l2_from_gid;
@@ -222,7 +221,6 @@
 		ibv_cmd_post_send;
 		ibv_cmd_post_srq_recv;
 		ibv_cmd_query_context;
-		ibv_cmd_query_device;
 		ibv_cmd_query_device_any;
 		ibv_cmd_query_mr;
 		ibv_cmd_query_port;
Index: librdmacm/librspreload.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/librdmacm/librspreload.map b/librdmacm/librspreload.map
--- a/librdmacm/librspreload.map	(revision Staged)
+++ b/librdmacm/librspreload.map	(date 1737244439467)
@@ -17,7 +17,6 @@
 		read;
 		readv;
 		recv;
-		recvfrom;
 		recvmsg;
 		select;
 		send;
Index: providers/efa/libefa.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/providers/efa/libefa.map b/providers/efa/libefa.map
--- a/providers/efa/libefa.map	(revision Staged)
+++ b/providers/efa/libefa.map	(date 1737244143529)
@@ -17,7 +17,6 @@
 	global:
 		efadv_cq_from_ibv_cq_ex;
 		efadv_create_cq;
-		efadv_wc_read_sgid;
 } EFA_1.1;

 EFA_1.3 {
