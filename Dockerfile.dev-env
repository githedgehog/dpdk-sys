ARG LLVM_VERSION="18"
ARG DEV_ENV_SRC="ghcr.io/githedgehog/dpdk-sys/dev-env-nix"
FROM ${DEV_ENV_SRC}:main-llvm${LLVM_VERSION} AS dev-env

SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]

RUN mkdir /tmp \
 && chmod 777 /tmp \
 && echo "ALL ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/dangerous \
 && chmod 0444 /etc/sudoers.d/dangerous \
 && chmod 4755 /sbin/sudo \
 && chmod 555 /etc/pam.d \
 && chmod 444 /etc/pam.d/* \
 && echo 'root:x:0:0::/root:/bin/bash' > /etc/passwd \
 && echo 'root:x:0:' > /etc/group \
 && chown root:root /etc/passwd \
 && chown root:root /etc/group \
 && chmod 544 /etc/passwd \
 && chmod 544 /etc/group

ENV SSL_CERT_FILE=/etc/ssl/certs/ca-bundle.crt

COPY ./os-release /etc/os-release

ENV __bold=1
ENV __prompt_env_color=99
ENV __prompt_dir_color=116
ENV __prompt_cmd_color=154
ENV __prompt_root_cmd_color=160
ENV _bold="\\033[${__bold}m"
ENV _prompt_env_color="\\033[38;5;${__prompt_env_color}m"
ENV _prompt_dir_color="\\033[38;5;${__prompt_dir_color}m"
ENV _prompt_cmd_color="\\033[38;5;${__prompt_cmd_color}m"
ENV _prompt_root_cmd_color="\\033[38;5;${__prompt_root_cmd_color}m"
ENV _end_color="\\033[0m"
ENV _red_if_root="\$(if [ \$(whoami) == root ]; then echo '${_prompt_root_cmd_color}'; else echo '${_prompt_cmd_color}'; fi)"
ENV _sigil="\$(if [ \$(whoami) == root ]; then echo -e ＃; else echo ＄; fi)"
ENV _env_propt="${_bold}${_prompt_env_color}⟪dataplane:dev-env:\$(whoami)⟫${_end_color}"
ENV _pwd_prompt="${_bold}${_prompt_dir_color}⟪\$(pwd)⟫${_end_color}"
ENV _cmd_prompt="${_bold}${_red_if_root}⟪$_sigil⟫${_end_color} "
ENV PS1="\n${_env_propt}\n${_pwd_prompt}\n${_cmd_prompt}"

#ENV LD_LIBRARY_PATH="/lib"
#ENV LIBCLANG_PATH="${LD_LIBRARY_PATH}"
#ENV DEV_ENV="/"
#ENV SYSROOT="/sysroot"
#ENV USER=builder
#ENV UID="${BUILDER_UID}"
#ENV GID="${BUILDER_GID}"
#ENV HOME="/home/builder"

# Install rust
#RUN rustup set profile minimal \
# && rustup toolchain install stable \
# && rustup target add x86_64-unknown-linux-gnu \
# && rustup target add x86_64-unknown-linux-musl \
# && rustup default stable

